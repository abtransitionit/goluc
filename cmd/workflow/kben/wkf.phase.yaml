name: kben
description: create a KBE (Kubernetes Easy) cluster
phases:
  NodeSsh:
    description: Check node is SSH reachable
    node: all
    fn: vm.CheckVmSshAccess
    dependency: []

  LucAgent:
    description: Copy LUC CLI agent
    node: all
    fn: luc.DeployLuc
    dependency:
      - NodeSsh

  OsUpgrade:
    description: Upgrade native OS packages and repositories to version latest
    node: all
    fn: dnfapt.UpgradeVmOs
    dependency:
      - LucAgent

  AppUpdate:
    description: Provision required/missing native standard OS packages
    node: all
    fn: dnfapt.UpdateVmOsApp
    param:
      daPkgKey: da.pkg.node
    dependency:
      - OsUpgrade

  DaRepoInstall:
    description: Provision native OS package repository(ies)
    node: all
    fn: dnfapt.InstallDaRepository
    param:
      repoKey: da.repo.node
    dependency:
      - AppUpdate

  DaPkgInstall:
    description: Provision native OS package(s)
    node: all
    fn: dnfapt.InstallDaPackage
    param:
      pkgKey: da.pkg.node
    dependency:
      - DaRepoInstall

  DaPkgInstall2:
    description: Provision native OS package(s) for control plane
    node: controlPlane
    fn: dnfapt.InstallDaPackage
    param:
      pkgKey: da.pkg.controlPlane
      targetsKey: controlPlaneNodes
    dependency:
      - DaPkgInstall

  KernelModuleLoad:
    description: Load OS kernel module(s)
    node: all
    fn: taskoskernel.LoadOsKModule
    param:
      modulesKey: osKernelModules
      kernelFileKey: kernelFilename
    dependency:
      - DaPkgInstall
      - DaPkgInstall2

  KernelParamSet:
    description: Set OS kernel parameter(s)
    node: all
    fn: taskoskernel.LoadOsKParam
    param:
      paramsKey: osKernelParams
      kernelFileKey: kernelFilename
    dependency:
      - KernelModuleLoad

  SelinuxConf:
    description: Configure SELinux
    node: all
    fn: selinux.ConfigureSelinux
    dependency:
      - KernelParamSet

  ServiceEnable:
    description: Enable OS services to start after a reboot
    node: all
    fn: oservice.EnableOsService
    param:
      serviceKey: osServiceEnable
    dependency:
      - SelinuxConf

  ServiceStart:
    description: Start OS services for current session
    node: all
    fn: oservice.StartOsService
    param:
      serviceKey: osServiceStart
    dependency:
      - SelinuxConf
      - ServiceEnable

  Reset1:
    description: Reset the control plane node(s)
    node: controlPlane
    fn: taskk8s.ResetNode
    param:
      targetsKey: controlPlaneNodes
    dependency:
      - ServiceStart

  Init:
    description: Initialize/bootstrap the cluster
    node: controlPlane
    fn: taskk8s.InitCPlane
    param:
      targetsKey: controlPlaneNodes
      clusterKey: clusterConfig
    dependency:
      - Reset1

  Reset2:
    description: Reset the worker node(s)
    node: worker
    fn: taskk8s.ResetNode
    param:
      targetsKey: workerNodes
    dependency:
      - Init

  Add:
    description: Add worker node(s) to the cluster
    node: worker
    fn: taskk8s.AddWorker
    param:
      masterNodeKey: controlPlaneNodes[0]
      targetsKey: workerNodes
    dependency:
      - Reset2

  KubectlConf:
    description: Configure kubectl
    node: controlPlane
    fn: taskk8s.ConfigureKubectlOnCplane
    param:
      masterNodeKey: controlPlaneNodes[0]
    dependency:
      - Reset2

  GoCli:
    description: Provision Go CLI(s)
    node: controlPlane
    fn: gocli.InstallGoCliOnVm
    param:
      goCliKey: goCli
      targetsKey: controlPlaneNodes
    dependency:
      - KubectlConf

  RcFile:
    description: Create a custom RC file in user's home
    node: controlPlane
    fn: util.CreateCustomRcFile
    param:
      rcFileNameKey: customRcFileName
    dependency:
      - GoCli

  EnvarPath:
    description: Configure PATH envvar into current user's custom RC file
    node: controlPlane
    fn: util.SetPath
    param:
      binFolderPathKey: binFolderPath
      rcFileNameKey: customRcFileName
    dependency:
      - RcFile

  HelmRepo:
    description: Install Helm chart repositories
    node: controlPlane
    fn: helm.InstallHelmRepo
    param:
      helmRepoKey: helmRepo
    dependency:
      - EnvarPath

  Cilium:
    description: Install and configure the CNI Cilium
    node: controlPlane
    fn: task_cilium.InstallCniCilium
    dependency:
      - HelmRepo
